{"version":3,"sources":["ng://@hb42/lib-client/component/splitter.directive.ts","ng://@hb42/lib-client/pipe/filesize.pipe.ts","ng://@hb42/lib-client/pipe/iedate.pipe.ts","ng://@hb42/lib-client/service/electron.service.ts","ng://@hb42/lib-client/service/error.service.ts","ng://@hb42/lib-client/service/version.service.ts","ng://@hb42/lib-client/service/sse.handler.ts","ng://@hb42/lib-client/service/logon/jwt-helper.service.ts","ng://@hb42/lib-client/service/logon/logonToken.ts","ng://@hb42/lib-client/service/logon/logon.service.ts","ng://@hb42/lib-client/service/logon/logon-interceptor.ts","ng://@hb42/lib-client/service/app.config.ts","ng://@hb42/lib-client/module.ts"],"names":["FlexboxSplitter","prototype","ngOnInit","this","prevEl","splitter","nextEl","parent","getProp","dimension","style","initSplitter","elem","prop","window","getComputedStyle","_this","params","bubbles","cancelable","detail","undefined","drag","evt","calcSize","clientX","clientY","splitterEvent","document","createEvent","initCustomEvent","SPLITTER_EVENT","pos","newsize","diff","lastPos","parseInt","endDrag","removeEventListener","dispatchEvent","storageId","localStorage","setItem","toString","addEventListener","preventDefault","getBoundingClientRect","left","top","state","getItem","laststate","Directive","args","selector","ElementRef","Input","el","console","debug","nativeElement","FileSizePipe","transform","value","item","Number","conv","val","idx","suffix","Math","round","Pipe","name","IEDatePipe","d","Date","toLocaleDateString","day","month","year","toLocaleTimeString","ElectronService","Object","defineProperty","ipcrenderer","isElectron","ipcRenderer","sendSync","Injectable","win","require","electron","info","electronVersion","ErrorService","newError","short","desc","router","getRouter","errors","push","title","message","navigate","errorPage","getLastError","length","pop","resetApp","electronService","send","reload","handleError","error","dir","injector","get","Router","Injector","VersionService","version","serverversion","init","serverPackage","webserver","location","prepareExternalUrl","http","toPromise","then","r","VERSION","full","responseType","gh","_a","sent","replace","makeVer","sr","catch","err","pack","pre","semver.prerelease","prerel","prebuild","displayname","description","copyright","author","license","major","semver.major","minor","semver.minor","patch","semver.patch","prerelease","build","githash","versions","HttpClient","Location","SseHandler","type","listener","sse","serverUrl","sseAddr","sseUrl","makeSseUrl","EventSource","withCredentials","onopen","event","readyState","onerror","JwtHelperService","urlBase64Decode","str","output","Error","b64DecodeUnicode","decodeToken","token","parts","split","decoded","JSON","parse","getTokenExpirationDate","hasOwnProperty","date","setUTCSeconds","exp","isTokenExpired","offsetSeconds","valueOf","b64decode","String","bc","bs","buffer","charAt","fromCharCode","indexOf","decodeURIComponent","Array","map","call","c","charCodeAt","slice","join","LOGON_OPTIONS","InjectionToken","LogonService","dontcheck","logonPar","logon","urlswithouttoken","getTokenWithCheck","waitForToken","tokenExpiresIn","autoLogin","Promise","resolve","reject","getToken","httphandler","getHttp","ntlmURL","tmp","loginURL","jwt","setToken","getData","jsonWebToken","jwtHelper","data","seconds","JwtToken","clearToken","removeItem","timeoutfn","ms","setTimeout","Inject","appName","NTLMserver","webserviceServer","LogonInterceptor","intercept","request","next","logonService","active","isWhitelisted","clone","errorHandling","from","pipe","mergeMap","asyncToken","setHeaders","JwtHeader","whitelist","findIndex","addr","url","startsWith","handle","catchError","obs","HttpErrorResponse","status","errorService","statusText","EMPTY","throwError","urlsWithoutToken","AppConfig","load","jsonFile","xhr","XMLHttpRequest","overrideMimeType","open","onreadystatechange","settings","responseText","initErrorHandler","LibClientModule","NgModule","imports","CommonModule","exports","declarations","providers","provide","HTTP_INTERCEPTORS","useClass","multi","ErrorHandler","useFactory","deps"],"mappings":"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","sourcesContent":["/**\n * Attribut fb-splitter\n *\n * Splitter fuer Flexbox\n *\n * Die Voraussetzung ist, dass das Parent-Element mit display:flex ausgezeichnet ist.\n * Die Splitterausrichtung wird von der flexDirection-Eigenschaft des Parent abgeleitet\n * (\"row\" horizontaler Splitter, \"column\" vertikal).\n * Der Splitter muss zwischen den beiden Element plaziert werden, die veraendert werden\n * sollen, \"order\" funktioniert hier nicht. Mindestens eines der Elemente muss eine feste\n * Breite/Hoehe haben (flexGrow:0, bzw flex:0 0 auto + width:/height: XXpx). Sinnvoll\n * ist zudem min-width bzw. min-height. Das zweite Element kann flex:1 bzw. flex:auto\n * bekommen, dann kuemmert sich Flexbox ums Anpassen.\n *\n * Das parent-Element braucht ausserdem den Style \"align-items: stretch\" (ist default).\n * Damit overflow im inneren DIV funktioniert muessen die Flexbox-Items position:relative\n * und der innere DIV position:absolute bekommen.\n *\n * inputs: [storageId]  - Kennung fuer die Splitterposition in der localStorage\n *                        (leer -> nicht speichern)\n *\n * Quelle:\n * https://hacks.mozilla.org/2013/12/application-layout-with-css3-flexible-box-module/\n */\n\nimport {\n    Directive,\n    ElementRef,\n    Input,\n    OnInit,\n} from \"@angular/core\";\n\n@Directive({\n  selector: \"[fb-splitter]\",\n})\nexport class FlexboxSplitter implements OnInit {\n\n  public static SPLITTER_EVENT: string = \"hbsplitter\";\n\n  // inputs\n  @Input() private storageId: string = \"\";\n\n  private splitter: HTMLElement;\n  private prevEl: HTMLElement;\n  private nextEl: HTMLElement;\n  private dimension: string;\n  // private chgPrev: boolean = false;\n  // private chgNext: boolean = false;\n\n  private splitterEvent: CustomEvent;\n\n  private lastPos: number = 0;\n\n  constructor(private el: ElementRef) {\n    console.debug(\"c'tor flexboxsplitter\");\n    this.splitter = el.nativeElement;\n  }\n\n  public ngOnInit() {\n    // Umgebung holen\n    this.prevEl = this.splitter.previousElementSibling as HTMLElement;\n    this.nextEl = this.splitter.nextElementSibling as HTMLElement;\n    const parent: Element = this.splitter.parentElement as Element;\n    // parent muss flexbox sein\n    // if (this.getProp(parent, \"display\") !== \"flex\") {\n    //   throw \"Error: parent element for splitter must have style display:flex.\";\n    // }\n    // Richtung festlegen und passende Styles fuer den Splitter\n    if (this.getProp(parent, \"flexDirection\") === \"row\") {\n      this.dimension = \"width\";\n      this.splitter.style[\"border-left\" as any] = \"1px solid gray\";\n      this.splitter.style[\"cursor\"] = \"col-resize\";\n    } else {\n      this.dimension = \"height\";\n      this.splitter.style[\"border-top\" as any] = \"1px solid gray\";\n      this.splitter.style[\"cursor\"] = \"row-resize\";\n    }\n    this.splitter.style[\"background\"] = \"#eee\";\n    this.splitter.style[this.dimension as any] = \"6px\";\n\n    // Elemente nur fuer fixe Groesse aendern, flexGrow >0 = auto\n    // this.chgPrev = this.getProp(this.prevEl, \"flexGrow\") === 0;\n    // this.chgNext = this.getProp(this.nextEl, \"flexGrow\") === 0;\n    // los geht\"s\n    this.initSplitter();\n  }\n\n  private getProp(elem: Element, prop: string): any {\n    // window.getComputedStyle(elem).getPropertyValue(prop);\n    // im *IE* fkt. getPropertyValue() nicht, alt. direkter Zugriff mit [\"prop\"]\n    return window.getComputedStyle(elem)[prop as any];\n  }\n\n  private initSplitter() {\n    // let self: FlexboxSplitter = this;\n\n    // var event = new Event(\"hb.splitter\"); fkt. leider nicht im *IE*, statt dessen:\n    const params: any = { bubbles: false, cancelable: false, detail: undefined };\n    this.splitterEvent = document.createEvent(\"CustomEvent\");\n    this.splitterEvent\n        .initCustomEvent(FlexboxSplitter.SPLITTER_EVENT, params.bubbles, params.cancelable, params.detail);\n\n    const drag = (evt: DragEvent) => {\n      this.dimension === \"width\" ? calcSize(evt.clientX) : calcSize(evt.clientY);\n    };\n\n    const calcSize = (pos: number) => {\n      let newsize: number;\n      const diff: number = pos - this.lastPos;\n      // if (self.chgPrev) {\n      newsize = parseInt(this.getProp(this.prevEl, this.dimension), 10) + diff;\n      this.prevEl.style[this.dimension as any] = newsize + \"px\";\n      // }\n      // if (self.chgNext) {\n      newsize = parseInt(this.getProp(this.nextEl, this.dimension), 10) - diff;\n      this.nextEl.style[this.dimension as any] = newsize + \"px\";\n      // }\n      this.lastPos = pos;\n    };\n    const endDrag = () => {\n      window.removeEventListener(\"mousemove\", drag);\n      window.removeEventListener(\"mouseup\", endDrag);\n\n      // element bekommt list of listener als callbacks bei Aend\n      // foreach listener listener()\n      // -> Bsp eventService\n\n      // fkt. nicht\n      // var evt = document.createEvent(\"UIEvent\");\n      // evt.initUIEvent(\"resize\", true, false,window,0);\n      // window.dispatchEvent(evt);\n\n      window.dispatchEvent(this.splitterEvent);\n\n      // import f. jquery??\n      // $(window).resize();\n\n      if (this.storageId) {\n        localStorage.setItem(this.storageId, this.lastPos.toString(10));\n      }\n    };\n\n    this.splitter.addEventListener(\"mousedown\", (evt: DragEvent) => {\n      evt.preventDefault();    // prevent text selection\n      this.lastPos = this.dimension === \"width\" ? evt.clientX : evt.clientY;\n      window.addEventListener(\"mousemove\", drag);\n      window.addEventListener(\"mouseup\", endDrag);\n    });\n\n    // default pos setzen, oder ggf. letzten Stand holen\n    this.lastPos = this.dimension === \"width\" ? this.splitter.getBoundingClientRect().left\n        : this.splitter.getBoundingClientRect().top;\n    if (this.storageId) {\n      const state = localStorage.getItem(this.storageId);\n      const laststate = parseInt(state ? state : \"0\", 10);\n      if (laststate) {\n        calcSize(laststate);\n      }\n    }\n  }\n\n}\n","import {\n  Pipe,\n  PipeTransform,\n} from \"@angular/core\";\n\n@Pipe({\n        name: \"filesize\"\n})\nexport class FileSizePipe implements PipeTransform {\n\n  private readonly suffix: string[];\n  constructor() {\n    this.suffix = [ \"Bytes\", \"kB\", \"MB\", \"GB\", \"TB\", \"PB\", \"EB\", \"ZB\", \"YB\"];\n  }\n\n  public transform(value: any /*, params: any[]*/): any {\n    const item: number = Number(value);\n    return this.conv(item, 0);\n  }\n\n  private conv(val: number, idx: number): string {\n    if (val < 1024) {\n      return val + \" \" + this.suffix[idx];\n    } else {\n      return this.conv(Math.round(val / 1024), ++idx);\n    }\n  }\n}\n","import {\n  Pipe,\n  PipeTransform,\n} from \"@angular/core\";\n\n/**\n * date pipe, die auch im IE funktioniert, liefert date:\"dd.MM.y HH:mm:ss\"\n * -> https://github.com/angular/angular/issues/9524\n * -> https://marcoscaceres.github.io/jsi18n/\n *\n * *** hat sich erledigt, seit Angular5 funktioniert's ***\n */\n@Pipe({\n        name: \"iedate\"\n})\nexport class IEDatePipe implements PipeTransform {\n\n  public transform(value: number): string {\n    const d = new Date(value);\n    return d.toLocaleDateString(\"de\", {day: \"2-digit\", month: \"2-digit\", year: \"numeric\"}) + \" \"\n           + d.toLocaleTimeString();\n  }\n\n}\n","import {\n  Injectable,\n} from \"@angular/core\";\n\n/**\n * Verbindung zur electron runtime\n *\n *  Verwendung:\n *  <pre>\n *   public testElectron(electronService.ipcRenderer) {\n *     console.info(\"### sync reply \" + ipcRenderer.sendSync(\"synchronous-message\", \"ping\"));\n *\n *     ipcRenderer.on(\"asynchronous-reply\", (event, arg) => {\n *       console.info(\"### async reply \" + arg);\n *     });\n *     ipcRenderer.send(\"asynchronous-message\", \"ping\");\n *   }\n * </pre>\n */\n@Injectable()\nexport class ElectronService {\n\n  private readonly ipcrenderer: any;\n\n  get ipcRenderer() {\n    return this.ipcrenderer;\n  }\n  get isElectron() {\n    return typeof this.ipcrenderer !== \"undefined\";\n  }\n  get electronVersion() {\n    if (this.isElectron) {\n      return this.ipcRenderer.sendSync(\"get-version\", \"\");\n    } else {\n      return null;\n    }\n  }\n\n  constructor() {\n    /*\n     electron mit window.require holen, das wird nicht von webpack ueberschrieben. Dadurch\n     ignoriert webpack electron und packt es nicht in vendor.js. Ausserdem wird so die vorhandene\n     electron-Runtime verwendet. window.require ist nur in einer node/electron-Umgebung vorhanden.\n     -> {@link https://github.com/electron/electron/issues/7300}\n     */\n    const win: any = window;\n    if (typeof win.require === \"function\") {\n      const electron = win.require(\"electron\");\n      if (electron) {\n        this.ipcrenderer = electron.ipcRenderer;\n      }\n    }\n    if (this.isElectron) {\n      console.info(\"Running on electron runtime \" + this.electronVersion);\n      // console.dir(process.versions); // Angular cli ab v6 unterstuetzt keine libs mit Abhaengikeiten zu node\n    }\n  }\n\n}\n","import { ErrorHandler, Injectable, Injector } from \"@angular/core\";\nimport { Router } from \"@angular/router\";\n\nimport { ElectronService } from \"./electron.service\";\n\n/**\n * Fehler-Behandlung\n *\n * Fuer allgemeine Fehler muss die Anwendung eine Route fuer \"/error\" bereitstellen.\n *\n * Wenn die Anwendung neu geladen werden soll, ist Folgendes zu beachten:\n *\n * Im Browser wird der Reload mit document.location.reload() erledigt.\n *\n * In electron wuerde das nicht funktionieren (zumindest nicht mit Angular-SPA).\n * Da muss der Reload auf der electron-Seite erfolgen. Im electron start-script\n * sieht das in etwa so aus:\n * <pre>\n *   ipcMain.on(\"reload-app\", function(event, arg) {\n *     console.log(\"APP RELOAD \" + arg);\n *     mainWindow.loadURL(url.format({\n *                           pathname: path.join(__dirname, 'index.html'),\n *                           protocol: 'file:',\n *                           slashes: true\n *                        }));\n *   });\n * </pre>\n *\n */\n// @dynamic\n@Injectable()\nexport class ErrorService implements ErrorHandler {\n\n  public static errorPage: string = \"error\";\n\n  private router: Router;\n  private readonly errors: Array<{ title: string, message: string }>;\n\n  constructor(private injector: Injector, private electronService: ElectronService) {\n    console.debug(\"c'tor ErrorService\");\n    this.errors = [];\n  }\n\n  /**\n   * Fehlerseite anzeigen\n   *\n   * Die Anwendung muss eine Route fuer \"/error\" bereitstellen.\n   *\n   * param {string} short\n   * param {string} desc\n   */\n  public newError(short: string, desc: string) {\n    if (!this.router) {\n      this.router = this.getRouter();\n    }\n    this.errors.push({title: short, message: desc});\n    console.debug(\"** newError\");\n    console.debug(short + \" - \" + desc);\n    this.router.navigate([\"/\" + ErrorService.errorPage]);\n  }\n\n  public getLastError() {\n    if (this.errors && this.errors.length > 0) {\n      return this.errors.pop();\n    } else {\n      return {};\n    }\n  }\n\n  /**\n   * Anwendung neu laden\n   *\n   * Im Browser wird das mit document.location.reload() erledigt.\n   *\n   * In electron wuerde das nicht funktionieren (zumindest nicht mit Angular-SPA).\n   * Da muss der Reload auf der electron-Seite erfolgen. Im electron start-script\n   * sieht das in etwa so aus:\n   * <pre>\n   *   ipcMain.on(\"reload-app\", function(event, arg) {\n   *     console.log(\"APP RELOAD \" + arg);\n   *     mainWindow.loadURL(url.format({\n   *                           pathname: path.join(__dirname, 'index.html'),\n   *                           protocol: 'file:',\n   *                           slashes: true\n   *                        }));\n   *   });\n   * </pre>\n   */\n  public resetApp() {\n    if (this.electronService.isElectron) {\n      this.electronService.ipcRenderer.send(\"reload-app\", \"errorService\");\n    } else {\n      document.location!.reload(true);\n    }\n  }\n\n  /**\n   * Zentraler Exception-Handler\n   *\n   * in AppModule:\n   *  providers: [{provide: ErrorHandler, useClass: ErrorService}]\n   *\n   * {@link https://angular.io/api/core/ErrorHandler}\n   *\n   * param error\n   */\n  public handleError(error: any) {\n    console.debug(\"** handleError\");\n    console.dir(error);\n    this.newError(\"Anwendungsfehler\", error);\n  }\n\n  /*\n    Router kann nicht per DI geholt werden, da das eine zyklische Abhaengigkeit ausloest (Http -> Router-> Http)\n    Wenn Router spaeter geholt wird, gibt es keine Probleme. Entspricht nicht der reinen Lehre -> wenn mal Zeit ist\n    -> https://stackoverflow.com/questions/39767019\n   */\n  private getRouter(): Router {\n    return this.injector.get(Router);\n  }\n}\n","import { Location } from \"@angular/common\";\nimport * as semver from \"semver\";\n\nimport {\n  HttpClient,\n} from \"@angular/common/http\";\nimport {\n  Injectable,\n  VERSION,\n} from \"@angular/core\";\n\nimport { ElectronService } from \"./electron.service\";\nimport { Version } from \"./version\";\n\n@Injectable()\nexport class VersionService {\n  private version: Version;\n  private serverversion: Version;\n\n  constructor(private http: HttpClient, private electronService: ElectronService,\n              private location: Location) {\n  }\n\n  public get ver(): Version {\n    return this.version;\n  }\n  public get serverVer(): Version {\n    return this.serverversion;\n  }\n\n  /**\n   * Versions-Resource aus package.json initialisieren.\n   * Der String serverPackage muss eine URL fuer die Server-REST-API enthalten,\n   * deren Aufruf die package.json des Servers liefert.\n   *\n   * param {string} serverPackage\n   * returns {Promise<Version>}\n   */\n  public async init(serverPackage: string): Promise<Version> {\n    const webserver = this.location.prepareExternalUrl(\"\");\n    return this.http.get(webserver + \"package.json\").toPromise()\n        .then(async (r: any) => {\n          r[\"versions\"] = [\"Angular \" + VERSION.full];\n          if (this.electronService.isElectron) {\n            r[\"versions\"].push(\"Electron \" + this.electronService.electronVersion);\n          }\n          try {\n            const gh = await this.http.get(webserver + \"resource/git.txt\", { responseType: \"text\" }).toPromise();\n            r[\"githash\"] = gh.replace(/\\n/, \"\").replace(/\\r/, \"\");\n          } catch (e) {\n            console.error(\"Fehler beim Lesen von ./resource/git.txt\");\n            r[\"githash\"] = \"\";\n          }\n          this.version = this.makeVer(r);\n          if (serverPackage) {\n            return this.http.get(serverPackage).toPromise()\n                .then((sr) => {\n                  this.serverversion = this.makeVer(sr);\n                  return this.version;\n                }).catch((err) => {\n                  console.error(\"Fehler beim Ermitteln der Server-Version: \" + err);\n                  return this.version;\n                });\n          } else {\n            return this.version;\n          }\n        });\n  }\n\n  private makeVer(pack: any): Version {\n    const pre = semver.prerelease(pack.version); // ~['alpha', 10]\n    let prerel = \"\";\n    let prebuild: number | null = null;\n    if (pre && pre.length > 0) {\n      if (typeof pre[0] === \"number\") {\n        prebuild = +pre[0];\n        prerel = \"beta\";\n      } else {\n        prerel = pre[0];\n        prebuild = typeof pre[1] === \"number\" ? +pre[1] : 0;\n      }\n    }\n    const version = {\n      name: pack.name,\n      displayname: pack.displayname,\n      description: pack.description,\n      version: pack.version,\n      copyright: pack.copyright,\n      author: pack.author,\n      license: pack.license,\n      major: semver.major(pack.version),\n      minor: semver.minor(pack.version),\n      patch: semver.patch(pack.version),\n      prerelease: prerel,\n      build: prebuild,\n      githash: pack.githash ? pack.githash : \"\",\n      versions: pack.versions,\n    };\n    return version;\n  }\n\n}\n","import { makeSseUrl } from \"@hb42/lib-common\";\r\n\r\n/**\r\n * Auf SSE Events reagieren\r\n */\r\nexport class SseHandler {\r\n\r\n  private sse: EventSource;\r\n\r\n  /**\r\n   * EventSource fuer den Empfang von Server Sent Events erzeugen\r\n   *\r\n   * @param serverUrl - Server-Adresse\r\n   * @param sseAddr - SSE-Aufruf (wird intern auf /sse/<sseAddr> umgesetzt)\r\n   */\r\n  constructor(serverUrl: string, sseAddr: string) {\r\n    const sseUrl = makeSseUrl(\"farc\");\r\n    this.sse = new EventSource(serverUrl + sseUrl, { withCredentials: true });\r\n\r\n    this.sse.onopen = (event: MessageEvent) => {\r\n      console.debug(\"SSE open readystate=\" + this.sse.readyState);\r\n    };\r\n    this.addEventListener(\"init\", (event: MessageEvent) => {\r\n      console.debug(\"SSE received initialization message\");\r\n    });\r\n    this.sse.onerror = (event: MessageEvent) => {\r\n      console.error(\"EventSource failed. \");\r\n      console.dir(event);\r\n    };\r\n  }\r\n\r\n  /**\r\n   * Listener fuer SSE Events anhaengen\r\n   *\r\n   *   event.lastEventId -> id\r\n   *   event.type -> event\r\n   *   event.data -> data\r\n   *\r\n   * @param type - Name des Event\r\n   * @param listener - Listener-Funktion -> (event) => {}\r\n   */\r\n  public addEventListener(type: string, listener: EventListenerOrEventListenerObject) {\r\n    console.debug(\"SSE addEventListener \" + type);\r\n    this.sse.addEventListener(type, listener);\r\n  }\r\n\r\n  public removeEventListener(type: string, listener: EventListenerOrEventListenerObject) {\r\n    this.sse.removeEventListener(type, listener);\r\n  }\r\n\r\n}\r\n","import { Injectable } from \"@angular/core\";\n\n/**\n * JsonWebToken-Handling\n *\n * payloadd aus dem JWT holen/ JWT -Ablauf ueberpruefen\n *\n * lifted from {@link https://github.com/auth0/angular2-jwt}\n */\n@Injectable()\nexport class JwtHelperService {\n\n  public urlBase64Decode(str: string): string {\n    let output = str.replace(/-/g, \"+\").replace(/_/g, \"/\");\n    switch (output.length % 4) {\n      case 0: {\n        break;\n      }\n      case 2: {\n        output += \"==\";\n        break;\n      }\n      case 3: {\n        output += \"=\";\n        break;\n      }\n      default: {\n        throw new Error(\"Illegal base64url string!\");\n      }\n    }\n    return this.b64DecodeUnicode(output);\n  }\n\n  public decodeToken(token: string): any {\n    const parts = token.split(\".\");\n\n    if (parts.length !== 3) {\n      throw new Error(\"The inspected token doesn\\'t appear to be a JWT. \" +\n          \"Check to make sure it has three parts and see https://jwt.io for more.\");\n    }\n\n    const decoded = this.urlBase64Decode(parts[1]);\n    if (!decoded) {\n      throw new Error(\"Cannot decode the token.\");\n    }\n\n    return JSON.parse(decoded);\n  }\n\n  public getTokenExpirationDate(token: string): Date | null {\n    let decoded: any;\n    decoded = this.decodeToken(token);\n\n    if (!decoded.hasOwnProperty(\"exp\")) {\n      return null;\n    }\n\n    const date = new Date(0);\n    date.setUTCSeconds(decoded.exp);\n\n    return date;\n  }\n\n  public isTokenExpired(token: string, offsetSeconds?: number): boolean {\n    const date = this.getTokenExpirationDate(token);\n    offsetSeconds = offsetSeconds || 0;\n\n    if (date === null) {\n      return false;\n    }\n\n    return !(date.valueOf() > new Date().valueOf() + offsetSeconds * 1000);\n  }\n\n  /* tslint:disable: no-conditional-assignment no-bitwise ban-comma-operator */\n  // credits for decoder goes to https://github.com/atk\n  private b64decode(str: string): string {\n    const chars = \"ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/=\";\n    let output: string = \"\";\n\n    str = String(str).replace(/=+$/, \"\");\n\n    if (str.length % 4 === 1) {\n      throw new Error(\"'atob' failed: The string to be decoded is not correctly encoded.\");\n    }\n\n    for (\n        // initialize result and counters\n        let bc: number = 0, bs: any, buffer: any, idx: number = 0;\n        // get next character\n        (buffer = str.charAt(idx++));\n        // character found in table? initialize bit storage and add its ascii value;\n        ~buffer &&\n        (\n            (bs = bc % 4 ? bs * 64 + buffer : buffer),\n                // and if not first of each 4 characters,\n                // convert the first 8 bits to one ascii character\n            bc++ % 4\n        )\n            ? (output += String.fromCharCode(255 & (bs >> ((-2 * bc) & 6))))\n            : 0\n    ) {\n      // try to find character in table (0-63, not found => -1)\n      buffer = chars.indexOf(buffer);\n    }\n    return output;\n  }\n\n  private b64DecodeUnicode(str: any) {\n    return decodeURIComponent(\n        Array.prototype.map\n            .call(this.b64decode(str), (c: any) => {\n              return \"%\" + (\"00\" + c.charCodeAt(0).toString(16)).slice(-2);\n            })\n            .join(\"\"),\n    );\n  }\n\n}\n","import { InjectionToken } from \"@angular/core\";\nimport { LogonParameter } from \"./logon.parameter\";\n\n/**\n * Fuer das Einfuegen der LogonParameter als provider im app.module.\n * <pre>\n *            providers   : [\n *             {\n *               provide: LOGON_OPTIONS,\n *               useValue:  {\n *                 logon           : \"NTLM\",\n *            ...\n * </pre>\n * @see {@link LogonParameter}\n * @see {@link LogonService}\n * @see {@link LogonInterceptor}\n *\n * type {InjectionToken<LogonParameter>}\n */\nexport const LOGON_OPTIONS = new InjectionToken<LogonParameter>(\"LOGON_OPTIONS\");\n","import { HttpClient } from \"@angular/common/http\";\nimport { Inject, Injectable, Injector } from \"@angular/core\";\n\nimport { JwtToken, loginURL } from \"@hb42/lib-common\";\nimport { JwtHelperService } from \"./jwt-helper.service\";\n\nimport { LogonParameter } from \"./logon.parameter\";\nimport { LOGON_OPTIONS } from \"./logonToken\";\n\n/**\n * Anmeldung am Server erledigen und JSONWebToken managen\n *\n * Die Anwendung muss die benoetigte Konfiguration als {@link LOGON_OPTIONS}-Provider\n * bereitstellen.\n *\n * todo Handling fuer Form-Login\n *\n * @see {@link LOGON_OPTIONS}\n * @see {@link LogonParameter}\n * @see {@link LogonInterceptor}\n */\n@Injectable()\nexport class LogonService {\n\n  private httphandler: HttpClient;\n  private logonPar: LogonParameter;\n  private dontcheck = false;\n  private urlswithouttoken: string[] = [];\n\n  private readonly ntlmURL: string;\n  private readonly loginURL: string;\n\n  public get dontCheckNow(): boolean {\n    return this.dontcheck;\n  }\n  public get active(): boolean {\n    return this.logonPar.logon !== \"NO\";\n  }\n  public get ntlm(): boolean {\n    return this.logonPar.logon === \"NTLM\";\n  }\n  public get urlsWithoutToken(): string[] {\n    return this.urlswithouttoken;\n  }\n\n  constructor(@Inject(LOGON_OPTIONS) logonPar: LogonParameter,\n              private injector: Injector,\n              private jwtHelper: JwtHelperService) {\n    console.debug(\"c'tor LogonService appName=\" + logonPar.appName);\n    this.logonPar = logonPar;\n    // Ausnahmen, bei denen keinToken geprueft wird\n    this.ntlmURL = this.logonPar.NTLMserver + \"?app=\" + this.logonPar.appName;\n    this.loginURL = this.logonPar.webserviceServer + loginURL + \"/\";\n    this.urlswithouttoken.push(this.ntlmURL);\n    this.urlswithouttoken.push(this.loginURL);\n  }\n\n  /**\n   * Fuer HttpInterceptor Autologin Token holen\n   *\n   * returns {Promise<string>}\n   */\n  public getTokenWithCheck(): Promise<string> {\n    if (this.dontcheck) {  // Token wird gerade geholt -> warten\n      console.debug(\"LogonService: wait for new token\");\n      return this.waitForToken();\n    } else if (this.tokenExpiresIn(30)) {  // laeuft bald ab -> neues Token\n      console.debug(\"LogonService: tokenExpires - do autologin\");\n      // wirft im Fehlerfall Error -> evtl. hier Fehlerhandling mit try catch & ErrorService\n      // s. default-autologin-jwt-handler\n      return this.autoLogin();\n    } else {  // Token als Promise liefern\n      return new Promise<string>((resolve, reject) => {\n        resolve(this.getToken());\n      });\n    }\n  }\n\n  /**\n   * User auto login\n   *\n   * Fehler bei der Anmeldung wirft eine Exception, darum muss sich\n   * die Anwendung kuemmern.\n   *\n   * returns {Promise<string>} JWT-Token\n   */\n  public autoLogin(): Promise<string> {\n    this.dontcheck = true;\n    if (!this.httphandler) {\n      this.httphandler = this.getHttp();\n    }\n    console.debug(\">>> AUTO LOGIN\");\n    console.debug(\">>> 1 getting ntlm user\");\n    return this.httphandler.get(this.ntlmURL)  // NTLM-Server aufrufen\n      .toPromise().then((tmp: any) => {\n        console.debug(\">>> 2 success temp-token=\" + tmp[\"token\"]);\n        console.debug(\">>> 3 logging into REST API\");                 // mit Token webserviceServer aufrufen\n        return this.httphandler.get(this.loginURL + tmp[\"token\"])\n          .toPromise().then((jwt: any) => {\n            console.debug(\">>> 4 result jwt-token=\" + jwt[\"jwt\"]);\n            if (jwt) {\n              this.setToken(jwt[\"jwt\"]);                 // in local storage ablegen\n              this.dontcheck = false;\n              return jwt[\"jwt\"];\n            } else {\n              console.error(\"*** Login not successful\");\n              this.dontcheck = false;\n              throw new Error(\"Login error - JWT is null\");\n            }\n          });\n      }) as Promise<string>;\n  }\n\n  /**\n   * get JWT payload\n   *\n   * returns {any}\n   */\n  public getData(): any {\n    const token = this.getToken();\n    let jsonWebToken: any;\n    if (token) {\n      jsonWebToken = this.jwtHelper.decodeToken(token);\n    }\n    return (jsonWebToken ? jsonWebToken.data || {} : {});\n  }\n\n  /**\n   * Expires token in x seconds?\n   *\n   * param {number} seconds\n   * returns {boolean}\n   */\n  public tokenExpiresIn(seconds: number): boolean {\n    const token = this.getToken();\n    if (token) {\n      // const jwtHelper = new JwtHelperService();\n      return this.jwtHelper.isTokenExpired(token, seconds);\n    }\n    return true;\n  }\n\n  /**\n   * get Token from storage\n   *\n   * returns {string}\n   */\n  public getToken(): string {\n    const token = localStorage.getItem(JwtToken);\n    return token ? token : \"\";\n  }\n\n  /**\n   * save token to storage\n   *\n   * param {string} token\n   */\n  public setToken(token: string) {\n    // console.debug(\"save token \");\n    localStorage.setItem(JwtToken, token);\n  }\n\n  /**\n   * delete token\n   */\n  public clearToken(): void {\n    localStorage.removeItem(JwtToken);\n  }\n\n  /*\n    HttpClient kann nicht per DI geholt werden, da das eine zyklische Abhaengigkeit im AppModule ausloest\n    Wenn HttpClient spaeter geholt wird, gibt es keine Probleme. Entspricht nicht der reinen Lehre -> wenn mal Zeit ist\n    -> https://stackoverflow.com/questions/39767019\n   */\n  private getHttp(): HttpClient {\n    return this.injector.get<HttpClient>(HttpClient);\n  }\n\n  // Promise erzeugen, das wartet bis ein Token verfuegbar ist\n  private waitForToken(): Promise<string> {\n    return new Promise<string>((resolve: (token: string) => void) => {\n      this.timeoutfn(resolve, 10);\n    });\n  }\n  // rekursive Warteschleife\n  private timeoutfn(resolve: (token: string) => void, ms: number) {\n    setTimeout(() => {\n      if (this.dontcheck) {\n        this.timeoutfn(resolve, ms);\n      } else {\n        resolve(this.getToken());\n      }\n    }, ms);\n\n  }\n\n}\n","import { HttpErrorResponse, HttpEvent, HttpHandler, HttpInterceptor, HttpRequest } from \"@angular/common/http\";\nimport { Injectable } from \"@angular/core\";\nimport { JwtHeader } from \"@hb42/lib-common\";\nimport { EMPTY, from, Observable, throwError } from \"rxjs\";\nimport { catchError, mergeMap } from \"rxjs/operators\";\nimport { ErrorService } from \"../error.service\";\nimport { LogonService } from \"./logon.service\";\n\n/**\n * {@link HttpInterceptor} fuer das Einfuegen eines JWT in die Aufrufe\n * zum REST-Server. Ausserdem werden HTTP-Fehler an den {@link ErrorService}\n * uebergeben (ausser 401 + 403, da wird die Anwendung neu geladen).\n *\n * Uebernommen aus {@link https://github.com/auth0/angular2-jwt}.\n *\n * @see {@link LOGON_OPTIONS}\n * @see {@link LogonService}\n * @see {@link LogonParameter}\n * @see {@link ErrorService}\n */\n@Injectable()\nexport class LogonInterceptor implements HttpInterceptor {\n\n  private whitelist: string[] = [];\n\n  constructor(private logonService: LogonService, private errorService: ErrorService) {\n    console.debug(\"c'tor LogonInterceptor\");\n    this.whitelist = logonService.urlsWithoutToken;\n  }\n\n  public intercept(request: HttpRequest<any>, next: HttpHandler): Observable<HttpEvent<any>> {\n    // console.debug(\"INTERCEPT (1 check) \" + request.url);\n    if (!this.logonService.active || this.isWhitelisted(request)) {\n      // console.debug(\"no token check \" + request.url);\n      request = request.clone();\n      return this.errorHandling(request, next);\n    } else {\n      const token: Promise<string> = this.logonService.getTokenWithCheck();\n      return from(token).pipe(mergeMap((asyncToken: string) => {\n        // console.debug(\"insert token into request \" + request.url);\n        request = request.clone({setHeaders: {[JwtHeader]: asyncToken}});\n        return this.errorHandling(request, next);\n      }));\n    }\n  }\n\n  private isWhitelisted(request: HttpRequest<any>): boolean {\n    return (this.whitelist.findIndex((addr) => request.url.startsWith(addr)) > -1);\n  }\n\n  private errorHandling(request: HttpRequest<any>, next: HttpHandler): Observable<HttpEvent<any>> {\n    // console.debug(\"INTERCEPT (2 call) \" + request.url);\n    return next.handle(request).pipe(catchError((err: any, obs) => {\n      console.debug(\"LogonInterceptor: errorHandling \" + request.url);\n      console.dir(err);\n      if (err instanceof HttpErrorResponse) {\n        if (err.status === 0 /*&& err.type === 3*/) { // network error (Server weg?)\n          console.debug(\"LogonInterceptor: network error\");\n          this.errorService.newError(\"Network Error\", \"Der Server ist nicht erreichbar.\");\n        } else if (err.status >= 400) {\n          console.debug(\"LogonInterceptor: HTTP-Error \" + err.status);\n          if (err.status === 401 || err.status === 403) {\n            this.errorService.resetApp();\n          } else {\n            this.errorService.newError(err.status + \" - \" + err.statusText,\n                err.message || \"Server liefert ungueltige Daten.\");\n          }\n        }\n        return EMPTY; // Observable.empty();\n      } else {\n        // this.errorService.newError(\"Error\", JSON.stringify(err));\n        console.error(\"LogonInterceptor: unhandled exception - rethrow\");\n        return throwError(err);\n      }\n    }));\n  }\n\n}\n","import { Injectable } from \"@angular/core\";\n\n/**\n * App-Configfile direkt, ohne Angular-Mechanismen. einlesen und\n * via AppConfig.settings.xxx in der Anwendung verfuegbar machen.\n *\n * Damit kann eine lokale Konfig-Datei geladen werden, bevor\n * Angular initialiert wird:\n *\n * <pre>\n *   AppConfig.load(environment.configFile).then(() => {\n *     platformBrowserDynamic().bootstrapModule(AppModule)\n *       .catch((err) => {\n *         console.info(\"Runtime-ERROR \" + err);\n *       })\n *  });\n *  </pre>\n *\n * Falls der Angular-Compiler ngc ueber diese Datei stolpert:\n * in tsconfig.json unter \"angularCompilerOptions\" \"strictMetadataEmit\"\n * auf \"false\" setzen.\n */\n// @dynamic\n@Injectable()\nexport class AppConfig {\n\n  public static settings: any = {};\n\n  public static load(jsonFile: string) {\n    return new Promise((resolve, reject) => {\n      const xhr = new XMLHttpRequest();\n      xhr.overrideMimeType(\"application/json\");\n      xhr.open(\"GET\", jsonFile, true);\n      xhr.onreadystatechange = () => {\n        if (xhr.readyState === 4) {\n          if (xhr.status === 200) {\n            this.settings = JSON.parse(xhr.responseText);\n            resolve();\n          } else {\n            reject(`Could not load file '${jsonFile}': ${xhr.status}`);\n          }\n        }\n      };\n      xhr.send();\n    });\n  }\n}\n","import { CommonModule } from \"@angular/common\";\nimport { HTTP_INTERCEPTORS } from \"@angular/common/http\";\nimport { ErrorHandler, NgModule } from \"@angular/core\";\n\nimport { FlexboxSplitter } from \"./component\";\nimport { FileSizePipe, IEDatePipe } from \"./pipe\";\nimport { ElectronService, ErrorService, VersionService } from \"./service\";\nimport { JwtHelperService, LogonInterceptor, LogonService } from \"./service/logon\";\n\n// Verhindern, dass ErrorService mehrfach instanziiert wird\nexport function initErrorHandler(errorService: ErrorService) {\n  return errorService;\n}\n\n@NgModule({\n            imports     : [CommonModule],\n            exports     : [FlexboxSplitter, FileSizePipe, IEDatePipe],\n            declarations: [FlexboxSplitter, FileSizePipe, IEDatePipe],\n            providers   : [\n              ElectronService,\n              ErrorService,\n              VersionService,\n              LogonService,\n              JwtHelperService,\n              {\n                provide : HTTP_INTERCEPTORS,\n                useClass: LogonInterceptor,\n                multi   : true,\n              },\n              {\n                provide   : ErrorHandler,\n                useFactory: initErrorHandler,\n                deps      : [ErrorService],\n              },\n            ],\n          })\nexport class LibClientModule {\n}\n"]}