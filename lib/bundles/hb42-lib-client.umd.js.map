{"version":3,"file":"hb42-lib-client.umd.js.map","sources":["ng://@hb42/lib-client/component/splitter.directive.ts","ng://@hb42/lib-client/pipe/filesize.pipe.ts","ng://@hb42/lib-client/pipe/iedate.pipe.ts","ng://@hb42/lib-client/service/electron.service.ts","ng://@hb42/lib-client/service/error.service.ts","ng://@hb42/lib-client/service/version.service.ts","ng://@hb42/lib-client/service/sse.handler.ts","ng://@hb42/lib-client/service/logon/jwt-helper.service.ts","ng://@hb42/lib-client/service/logon/logonToken.ts","ng://@hb42/lib-client/service/logon/logon.service.ts","ng://@hb42/lib-client/service/logon/logon-interceptor.ts","ng://@hb42/lib-client/service/app.config.ts","ng://@hb42/lib-client/module.ts"],"sourcesContent":["/**\n * Attribut fb-splitter\n *\n * Splitter fuer Flexbox\n *\n * Die Voraussetzung ist, dass das Parent-Element mit display:flex ausgezeichnet ist.\n * Die Splitterausrichtung wird von der flexDirection-Eigenschaft des Parent abgeleitet\n * (\"row\" horizontaler Splitter, \"column\" vertikal).\n * Der Splitter muss zwischen den beiden Element plaziert werden, die veraendert werden\n * sollen, \"order\" funktioniert hier nicht. Mindestens eines der Elemente muss eine feste\n * Breite/Hoehe haben (flexGrow:0, bzw flex:0 0 auto + width:/height: XXpx). Sinnvoll\n * ist zudem min-width bzw. min-height. Das zweite Element kann flex:1 bzw. flex:auto\n * bekommen, dann kuemmert sich Flexbox ums Anpassen.\n *\n * Das parent-Element braucht ausserdem den Style \"align-items: stretch\" (ist default).\n * Damit overflow im inneren DIV funktioniert muessen die Flexbox-Items position:relative\n * und der innere DIV position:absolute bekommen.\n *\n * inputs: [storageId]  - Kennung fuer die Splitterposition in der localStorage\n *                        (leer -> nicht speichern)\n *\n * Quelle:\n * https://hacks.mozilla.org/2013/12/application-layout-with-css3-flexible-box-module/\n */\n\nimport {\n    Directive,\n    ElementRef,\n    Input,\n    OnInit,\n} from \"@angular/core\";\n\n@Directive({\n  selector: \"[fb-splitter]\",\n})\nexport class FlexboxSplitter implements OnInit {\n\n  public static SPLITTER_EVENT: string = \"hbsplitter\";\n\n  // inputs\n  @Input() private storageId: string = \"\";\n\n  private splitter: HTMLElement;\n  private prevEl: HTMLElement;\n  private nextEl: HTMLElement;\n  private dimension: string;\n  // private chgPrev: boolean = false;\n  // private chgNext: boolean = false;\n\n  private splitterEvent: CustomEvent;\n\n  private lastPos: number = 0;\n\n  constructor(private el: ElementRef) {\n    console.debug(\"c'tor flexboxsplitter\");\n    this.splitter = el.nativeElement;\n  }\n\n  public ngOnInit() {\n    // Umgebung holen\n    this.prevEl = this.splitter.previousElementSibling as HTMLElement;\n    this.nextEl = this.splitter.nextElementSibling as HTMLElement;\n    const parent: Element = this.splitter.parentElement as Element;\n    // parent muss flexbox sein\n    // if (this.getProp(parent, \"display\") !== \"flex\") {\n    //   throw \"Error: parent element for splitter must have style display:flex.\";\n    // }\n    // Richtung festlegen und passende Styles fuer den Splitter\n    if (this.getProp(parent, \"flexDirection\") === \"row\") {\n      this.dimension = \"width\";\n      this.splitter.style[\"border-left\" as any] = \"1px solid gray\";\n      this.splitter.style[\"cursor\"] = \"col-resize\";\n    } else {\n      this.dimension = \"height\";\n      this.splitter.style[\"border-top\" as any] = \"1px solid gray\";\n      this.splitter.style[\"cursor\"] = \"row-resize\";\n    }\n    this.splitter.style[\"background\"] = \"#eee\";\n    this.splitter.style[this.dimension as any] = \"6px\";\n\n    // Elemente nur fuer fixe Groesse aendern, flexGrow >0 = auto\n    // this.chgPrev = this.getProp(this.prevEl, \"flexGrow\") === 0;\n    // this.chgNext = this.getProp(this.nextEl, \"flexGrow\") === 0;\n    // los geht\"s\n    this.initSplitter();\n  }\n\n  private getProp(elem: Element, prop: string): any {\n    // window.getComputedStyle(elem).getPropertyValue(prop);\n    // im *IE* fkt. getPropertyValue() nicht, alt. direkter Zugriff mit [\"prop\"]\n    return window.getComputedStyle(elem)[prop as any];\n  }\n\n  private initSplitter() {\n    // let self: FlexboxSplitter = this;\n\n    // var event = new Event(\"hb.splitter\"); fkt. leider nicht im *IE*, statt dessen:\n    const params: any = { bubbles: false, cancelable: false, detail: undefined };\n    this.splitterEvent = document.createEvent(\"CustomEvent\");\n    this.splitterEvent\n        .initCustomEvent(FlexboxSplitter.SPLITTER_EVENT, params.bubbles, params.cancelable, params.detail);\n\n    const drag = (evt: DragEvent) => {\n      this.dimension === \"width\" ? calcSize(evt.clientX) : calcSize(evt.clientY);\n    };\n\n    const calcSize = (pos: number) => {\n      let newsize: number;\n      const diff: number = pos - this.lastPos;\n      // if (self.chgPrev) {\n      newsize = parseInt(this.getProp(this.prevEl, this.dimension), 10) + diff;\n      this.prevEl.style[this.dimension as any] = newsize + \"px\";\n      // }\n      // if (self.chgNext) {\n      newsize = parseInt(this.getProp(this.nextEl, this.dimension), 10) - diff;\n      this.nextEl.style[this.dimension as any] = newsize + \"px\";\n      // }\n      this.lastPos = pos;\n    };\n    const endDrag = () => {\n      window.removeEventListener(\"mousemove\", drag);\n      window.removeEventListener(\"mouseup\", endDrag);\n\n      // element bekommt list of listener als callbacks bei Aend\n      // foreach listener listener()\n      // -> Bsp eventService\n\n      // fkt. nicht\n      // var evt = document.createEvent(\"UIEvent\");\n      // evt.initUIEvent(\"resize\", true, false,window,0);\n      // window.dispatchEvent(evt);\n\n      window.dispatchEvent(this.splitterEvent);\n\n      // import f. jquery??\n      // $(window).resize();\n\n      if (this.storageId) {\n        localStorage.setItem(this.storageId, this.lastPos.toString(10));\n      }\n    };\n\n    this.splitter.addEventListener(\"mousedown\", (evt: DragEvent) => {\n      evt.preventDefault();    // prevent text selection\n      this.lastPos = this.dimension === \"width\" ? evt.clientX : evt.clientY;\n      window.addEventListener(\"mousemove\", drag);\n      window.addEventListener(\"mouseup\", endDrag);\n    });\n\n    // default pos setzen, oder ggf. letzten Stand holen\n    this.lastPos = this.dimension === \"width\" ? this.splitter.getBoundingClientRect().left\n        : this.splitter.getBoundingClientRect().top;\n    if (this.storageId) {\n      const state = localStorage.getItem(this.storageId);\n      const laststate = parseInt(state ? state : \"0\", 10);\n      if (laststate) {\n        calcSize(laststate);\n      }\n    }\n  }\n\n}\n","import {\n  Pipe,\n  PipeTransform,\n} from \"@angular/core\";\n\n@Pipe({\n        name: \"filesize\"\n})\nexport class FileSizePipe implements PipeTransform {\n\n  private readonly suffix: string[];\n  constructor() {\n    this.suffix = [ \"Bytes\", \"kB\", \"MB\", \"GB\", \"TB\", \"PB\", \"EB\", \"ZB\", \"YB\"];\n  }\n\n  public transform(value: any /*, params: any[]*/): any {\n    const item: number = Number(value);\n    return this.conv(item, 0);\n  }\n\n  private conv(val: number, idx: number): string {\n    if (val < 1024) {\n      return val + \" \" + this.suffix[idx];\n    } else {\n      return this.conv(Math.round(val / 1024), ++idx);\n    }\n  }\n}\n","import {\n  Pipe,\n  PipeTransform,\n} from \"@angular/core\";\n\n/**\n * date pipe, die auch im IE funktioniert, liefert date:\"dd.MM.y HH:mm:ss\"\n * -> https://github.com/angular/angular/issues/9524\n * -> https://marcoscaceres.github.io/jsi18n/\n *\n * *** hat sich erledigt, seit Angular5 funktioniert's ***\n */\n@Pipe({\n        name: \"iedate\"\n})\nexport class IEDatePipe implements PipeTransform {\n\n  public transform(value: number): string {\n    const d = new Date(value);\n    return d.toLocaleDateString(\"de\", {day: \"2-digit\", month: \"2-digit\", year: \"numeric\"}) + \" \"\n           + d.toLocaleTimeString();\n  }\n\n}\n","import {\n  Injectable,\n} from \"@angular/core\";\n\n/**\n * Verbindung zur electron runtime\n *\n *  Verwendung:\n *  <pre>\n *   public testElectron(electronService.ipcRenderer) {\n *     console.info(\"### sync reply \" + ipcRenderer.sendSync(\"synchronous-message\", \"ping\"));\n *\n *     ipcRenderer.on(\"asynchronous-reply\", (event, arg) => {\n *       console.info(\"### async reply \" + arg);\n *     });\n *     ipcRenderer.send(\"asynchronous-message\", \"ping\");\n *   }\n * </pre>\n */\n@Injectable()\nexport class ElectronService {\n\n  private readonly ipcrenderer: any;\n\n  get ipcRenderer() {\n    return this.ipcrenderer;\n  }\n  get isElectron() {\n    return typeof this.ipcrenderer !== \"undefined\";\n  }\n  get electronVersion() {\n    if (this.isElectron) {\n      return this.ipcRenderer.sendSync(\"get-version\", \"\");\n    } else {\n      return null;\n    }\n  }\n\n  constructor() {\n    /*\n     electron mit window.require holen, das wird nicht von webpack ueberschrieben. Dadurch\n     ignoriert webpack electron und packt es nicht in vendor.js. Ausserdem wird so die vorhandene\n     electron-Runtime verwendet. window.require ist nur in einer node/electron-Umgebung vorhanden.\n     -> {@link https://github.com/electron/electron/issues/7300}\n     */\n    const win: any = window;\n    if (typeof win.require === \"function\") {\n      const electron = win.require(\"electron\");\n      if (electron) {\n        this.ipcrenderer = electron.ipcRenderer;\n      }\n    }\n    if (this.isElectron) {\n      console.info(\"Running on electron runtime \" + this.electronVersion);\n      // console.dir(process.versions); // Angular cli ab v6 unterstuetzt keine libs mit Abhaengikeiten zu node\n    }\n  }\n\n}\n","import { ErrorHandler, Injectable, Injector } from \"@angular/core\";\nimport { Router } from \"@angular/router\";\n\nimport { ElectronService } from \"./electron.service\";\n\n/**\n * Fehler-Behandlung\n *\n * Fuer allgemeine Fehler muss die Anwendung eine Route fuer \"/error\" bereitstellen.\n *\n * Wenn die Anwendung neu geladen werden soll, ist Folgendes zu beachten:\n *\n * Im Browser wird der Reload mit document.location.reload() erledigt.\n *\n * In electron wuerde das nicht funktionieren (zumindest nicht mit Angular-SPA).\n * Da muss der Reload auf der electron-Seite erfolgen. Im electron start-script\n * sieht das in etwa so aus:\n * <pre>\n *   ipcMain.on(\"reload-app\", function(event, arg) {\n *     console.log(\"APP RELOAD \" + arg);\n *     mainWindow.loadURL(url.format({\n *                           pathname: path.join(__dirname, 'index.html'),\n *                           protocol: 'file:',\n *                           slashes: true\n *                        }));\n *   });\n * </pre>\n *\n */\n// @dynamic\n@Injectable()\nexport class ErrorService implements ErrorHandler {\n\n  public static errorPage: string = \"error\";\n\n  private router: Router;\n  private readonly errors: Array<{ title: string, message: string }>;\n\n  constructor(private injector: Injector, private electronService: ElectronService) {\n    console.debug(\"c'tor ErrorService\");\n    this.errors = [];\n  }\n\n  /**\n   * Fehlerseite anzeigen\n   *\n   * Die Anwendung muss eine Route fuer \"/error\" bereitstellen.\n   *\n   * param {string} short\n   * param {string} desc\n   */\n  public newError(short: string, desc: string) {\n    if (!this.router) {\n      this.router = this.getRouter();\n    }\n    this.errors.push({title: short, message: desc});\n    console.debug(\"** newError\");\n    console.debug(short + \" - \" + desc);\n    this.router.navigate([\"/\" + ErrorService.errorPage]);\n  }\n\n  public getLastError() {\n    if (this.errors && this.errors.length > 0) {\n      return this.errors.pop();\n    } else {\n      return {};\n    }\n  }\n\n  /**\n   * Anwendung neu laden\n   *\n   * Im Browser wird das mit document.location.reload() erledigt.\n   *\n   * In electron wuerde das nicht funktionieren (zumindest nicht mit Angular-SPA).\n   * Da muss der Reload auf der electron-Seite erfolgen. Im electron start-script\n   * sieht das in etwa so aus:\n   * <pre>\n   *   ipcMain.on(\"reload-app\", function(event, arg) {\n   *     console.log(\"APP RELOAD \" + arg);\n   *     mainWindow.loadURL(url.format({\n   *                           pathname: path.join(__dirname, 'index.html'),\n   *                           protocol: 'file:',\n   *                           slashes: true\n   *                        }));\n   *   });\n   * </pre>\n   */\n  public resetApp() {\n    if (this.electronService.isElectron) {\n      this.electronService.ipcRenderer.send(\"reload-app\", \"errorService\");\n    } else {\n      document.location!.reload(true);\n    }\n  }\n\n  /**\n   * Zentraler Exception-Handler\n   *\n   * in AppModule:\n   *  providers: [{provide: ErrorHandler, useClass: ErrorService}]\n   *\n   * {@link https://angular.io/api/core/ErrorHandler}\n   *\n   * param error\n   */\n  public handleError(error: any) {\n    console.debug(\"** handleError\");\n    console.dir(error);\n    this.newError(\"Anwendungsfehler\", error);\n  }\n\n  /*\n    Router kann nicht per DI geholt werden, da das eine zyklische Abhaengigkeit ausloest (Http -> Router-> Http)\n    Wenn Router spaeter geholt wird, gibt es keine Probleme. Entspricht nicht der reinen Lehre -> wenn mal Zeit ist\n    -> https://stackoverflow.com/questions/39767019\n   */\n  private getRouter(): Router {\n    return this.injector.get(Router);\n  }\n}\n","import { Location } from \"@angular/common\";\nimport * as semver from \"semver\";\n\nimport {\n  HttpClient,\n} from \"@angular/common/http\";\nimport {\n  Injectable,\n  VERSION,\n} from \"@angular/core\";\n\nimport { ElectronService } from \"./electron.service\";\nimport { Version } from \"./version\";\n\n@Injectable()\nexport class VersionService {\n  private version: Version;\n  private serverversion: Version;\n\n  constructor(private http: HttpClient, private electronService: ElectronService,\n              private location: Location) {\n  }\n\n  public get ver(): Version {\n    return this.version;\n  }\n  public get serverVer(): Version {\n    return this.serverversion;\n  }\n\n  /**\n   * Versions-Resource aus package.json initialisieren.\n   * Der String serverPackage muss eine URL fuer die Server-REST-API enthalten,\n   * deren Aufruf die package.json des Servers liefert.\n   *\n   * param {string} serverPackage\n   * returns {Promise<Version>}\n   */\n  public async init(serverPackage: string): Promise<Version> {\n    const webserver = this.location.prepareExternalUrl(\"\");\n    return this.http.get(webserver + \"package.json\").toPromise()\n        .then(async (r: any) => {\n          r[\"versions\"] = [\"Angular \" + VERSION.full];\n          if (this.electronService.isElectron) {\n            r[\"versions\"].push(\"Electron \" + this.electronService.electronVersion);\n          }\n          try {\n            const gh = await this.http.get(webserver + \"resource/git.txt\", { responseType: \"text\" }).toPromise();\n            r[\"githash\"] = gh.replace(/\\n/, \"\").replace(/\\r/, \"\");\n          } catch (e) {\n            console.error(\"Fehler beim Lesen von ./resource/git.txt\");\n            r[\"githash\"] = \"\";\n          }\n          this.version = this.makeVer(r);\n          if (serverPackage) {\n            return this.http.get(serverPackage).toPromise()\n                .then((sr) => {\n                  this.serverversion = this.makeVer(sr);\n                  return this.version;\n                }).catch((err) => {\n                  console.error(\"Fehler beim Ermitteln der Server-Version: \" + err);\n                  return this.version;\n                });\n          } else {\n            return this.version;\n          }\n        });\n  }\n\n  private makeVer(pack: any): Version {\n    const pre = semver.prerelease(pack.version); // ~['alpha', 10]\n    let prerel = \"\";\n    let prebuild: number | null = null;\n    if (pre && pre.length > 0) {\n      if (typeof pre[0] === \"number\") {\n        prebuild = +pre[0];\n        prerel = \"beta\";\n      } else {\n        prerel = pre[0];\n        prebuild = typeof pre[1] === \"number\" ? +pre[1] : 0;\n      }\n    }\n    const version = {\n      name: pack.name,\n      displayname: pack.displayname,\n      description: pack.description,\n      version: pack.version,\n      copyright: pack.copyright,\n      author: pack.author,\n      license: pack.license,\n      major: semver.major(pack.version),\n      minor: semver.minor(pack.version),\n      patch: semver.patch(pack.version),\n      prerelease: prerel,\n      build: prebuild,\n      githash: pack.githash ? pack.githash : \"\",\n      versions: pack.versions,\n    };\n    return version;\n  }\n\n}\n","import { makeSseUrl } from \"@hb42/lib-common\";\r\n\r\n/**\r\n * Auf SSE Events reagieren\r\n */\r\nexport class SseHandler {\r\n\r\n  private sse: EventSource;\r\n\r\n  /**\r\n   * EventSource fuer den Empfang von Server Sent Events erzeugen\r\n   *\r\n   * @param serverUrl - Server-Adresse\r\n   * @param sseAddr - SSE-Aufruf (wird intern auf /sse/<sseAddr> umgesetzt)\r\n   */\r\n  constructor(serverUrl: string, sseAddr: string) {\r\n    const sseUrl = makeSseUrl(\"farc\");\r\n    this.sse = new EventSource(serverUrl + sseUrl, { withCredentials: true });\r\n\r\n    this.sse.onopen = (event: MessageEvent) => {\r\n      console.debug(\"SSE open readystate=\" + this.sse.readyState);\r\n    };\r\n    this.addEventListener(\"init\", (event: MessageEvent) => {\r\n      console.debug(\"SSE received initialization message\");\r\n    });\r\n    this.sse.onerror = (event: MessageEvent) => {\r\n      console.error(\"EventSource failed. \");\r\n      console.dir(event);\r\n    };\r\n  }\r\n\r\n  /**\r\n   * Listener fuer SSE Events anhaengen\r\n   *\r\n   *   event.lastEventId -> id\r\n   *   event.type -> event\r\n   *   event.data -> data\r\n   *\r\n   * @param type - Name des Event\r\n   * @param listener - Listener-Funktion -> (event) => {}\r\n   */\r\n  public addEventListener(type: string, listener: EventListenerOrEventListenerObject) {\r\n    console.debug(\"SSE addEventListener \" + type);\r\n    this.sse.addEventListener(type, listener);\r\n  }\r\n\r\n  public removeEventListener(type: string, listener: EventListenerOrEventListenerObject) {\r\n    this.sse.removeEventListener(type, listener);\r\n  }\r\n\r\n}\r\n","import { Injectable } from \"@angular/core\";\n\n/**\n * JsonWebToken-Handling\n *\n * payloadd aus dem JWT holen/ JWT -Ablauf ueberpruefen\n *\n * lifted from {@link https://github.com/auth0/angular2-jwt}\n */\n@Injectable()\nexport class JwtHelperService {\n\n  public urlBase64Decode(str: string): string {\n    let output = str.replace(/-/g, \"+\").replace(/_/g, \"/\");\n    switch (output.length % 4) {\n      case 0: {\n        break;\n      }\n      case 2: {\n        output += \"==\";\n        break;\n      }\n      case 3: {\n        output += \"=\";\n        break;\n      }\n      default: {\n        throw new Error(\"Illegal base64url string!\");\n      }\n    }\n    return this.b64DecodeUnicode(output);\n  }\n\n  public decodeToken(token: string): any {\n    const parts = token.split(\".\");\n\n    if (parts.length !== 3) {\n      throw new Error(\"The inspected token doesn\\'t appear to be a JWT. \" +\n          \"Check to make sure it has three parts and see https://jwt.io for more.\");\n    }\n\n    const decoded = this.urlBase64Decode(parts[1]);\n    if (!decoded) {\n      throw new Error(\"Cannot decode the token.\");\n    }\n\n    return JSON.parse(decoded);\n  }\n\n  public getTokenExpirationDate(token: string): Date | null {\n    let decoded: any;\n    decoded = this.decodeToken(token);\n\n    if (!decoded.hasOwnProperty(\"exp\")) {\n      return null;\n    }\n\n    const date = new Date(0);\n    date.setUTCSeconds(decoded.exp);\n\n    return date;\n  }\n\n  public isTokenExpired(token: string, offsetSeconds?: number): boolean {\n    const date = this.getTokenExpirationDate(token);\n    offsetSeconds = offsetSeconds || 0;\n\n    if (date === null) {\n      return false;\n    }\n\n    return !(date.valueOf() > new Date().valueOf() + offsetSeconds * 1000);\n  }\n\n  /* tslint:disable: no-conditional-assignment no-bitwise ban-comma-operator */\n  // credits for decoder goes to https://github.com/atk\n  private b64decode(str: string): string {\n    const chars = \"ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/=\";\n    let output: string = \"\";\n\n    str = String(str).replace(/=+$/, \"\");\n\n    if (str.length % 4 === 1) {\n      throw new Error(\"'atob' failed: The string to be decoded is not correctly encoded.\");\n    }\n\n    for (\n        // initialize result and counters\n        let bc: number = 0, bs: any, buffer: any, idx: number = 0;\n        // get next character\n        (buffer = str.charAt(idx++));\n        // character found in table? initialize bit storage and add its ascii value;\n        ~buffer &&\n        (\n            (bs = bc % 4 ? bs * 64 + buffer : buffer),\n                // and if not first of each 4 characters,\n                // convert the first 8 bits to one ascii character\n            bc++ % 4\n        )\n            ? (output += String.fromCharCode(255 & (bs >> ((-2 * bc) & 6))))\n            : 0\n    ) {\n      // try to find character in table (0-63, not found => -1)\n      buffer = chars.indexOf(buffer);\n    }\n    return output;\n  }\n\n  private b64DecodeUnicode(str: any) {\n    return decodeURIComponent(\n        Array.prototype.map\n            .call(this.b64decode(str), (c: any) => {\n              return \"%\" + (\"00\" + c.charCodeAt(0).toString(16)).slice(-2);\n            })\n            .join(\"\"),\n    );\n  }\n\n}\n","import { InjectionToken } from \"@angular/core\";\nimport { LogonParameter } from \"./logon.parameter\";\n\n/**\n * Fuer das Einfuegen der LogonParameter als provider im app.module.\n * <pre>\n *            providers   : [\n *             {\n *               provide: LOGON_OPTIONS,\n *               useValue:  {\n *                 logon           : \"NTLM\",\n *            ...\n * </pre>\n * @see {@link LogonParameter}\n * @see {@link LogonService}\n * @see {@link LogonInterceptor}\n *\n * type {InjectionToken<LogonParameter>}\n */\nexport const LOGON_OPTIONS = new InjectionToken<LogonParameter>(\"LOGON_OPTIONS\");\n","import { HttpClient } from \"@angular/common/http\";\nimport { Inject, Injectable, Injector } from \"@angular/core\";\n\nimport { JwtToken, loginURL } from \"@hb42/lib-common\";\nimport { JwtHelperService } from \"./jwt-helper.service\";\n\nimport { LogonParameter } from \"./logon.parameter\";\nimport { LOGON_OPTIONS } from \"./logonToken\";\n\n/**\n * Anmeldung am Server erledigen und JSONWebToken managen\n *\n * Die Anwendung muss die benoetigte Konfiguration als {@link LOGON_OPTIONS}-Provider\n * bereitstellen.\n *\n * todo Handling fuer Form-Login\n *\n * @see {@link LOGON_OPTIONS}\n * @see {@link LogonParameter}\n * @see {@link LogonInterceptor}\n */\n@Injectable()\nexport class LogonService {\n\n  private httphandler: HttpClient;\n  private logonPar: LogonParameter;\n  private dontcheck = false;\n  private urlswithouttoken: string[] = [];\n\n  private readonly ntlmURL: string;\n  private readonly loginURL: string;\n\n  public get dontCheckNow(): boolean {\n    return this.dontcheck;\n  }\n  public get active(): boolean {\n    return this.logonPar.logon !== \"NO\";\n  }\n  public get ntlm(): boolean {\n    return this.logonPar.logon === \"NTLM\";\n  }\n  public get urlsWithoutToken(): string[] {\n    return this.urlswithouttoken;\n  }\n\n  constructor(@Inject(LOGON_OPTIONS) logonPar: LogonParameter,\n              private injector: Injector,\n              private jwtHelper: JwtHelperService) {\n    console.debug(\"c'tor LogonService appName=\" + logonPar.appName);\n    this.logonPar = logonPar;\n    // Ausnahmen, bei denen keinToken geprueft wird\n    this.ntlmURL = this.logonPar.NTLMserver + \"?app=\" + this.logonPar.appName;\n    this.loginURL = this.logonPar.webserviceServer + loginURL + \"/\";\n    this.urlswithouttoken.push(this.ntlmURL);\n    this.urlswithouttoken.push(this.loginURL);\n  }\n\n  /**\n   * Fuer HttpInterceptor Autologin Token holen\n   *\n   * returns {Promise<string>}\n   */\n  public getTokenWithCheck(): Promise<string> {\n    if (this.dontcheck) {  // Token wird gerade geholt -> warten\n      console.debug(\"LogonService: wait for new token\");\n      return this.waitForToken();\n    } else if (this.tokenExpiresIn(30)) {  // laeuft bald ab -> neues Token\n      console.debug(\"LogonService: tokenExpires - do autologin\");\n      // wirft im Fehlerfall Error -> evtl. hier Fehlerhandling mit try catch & ErrorService\n      // s. default-autologin-jwt-handler\n      return this.autoLogin();\n    } else {  // Token als Promise liefern\n      return new Promise<string>((resolve, reject) => {\n        resolve(this.getToken());\n      });\n    }\n  }\n\n  /**\n   * User auto login\n   *\n   * Fehler bei der Anmeldung wirft eine Exception, darum muss sich\n   * die Anwendung kuemmern.\n   *\n   * returns {Promise<string>} JWT-Token\n   */\n  public autoLogin(): Promise<string> {\n    this.dontcheck = true;\n    if (!this.httphandler) {\n      this.httphandler = this.getHttp();\n    }\n    console.debug(\">>> AUTO LOGIN\");\n    console.debug(\">>> 1 getting ntlm user\");\n    return this.httphandler.get(this.ntlmURL)  // NTLM-Server aufrufen\n      .toPromise().then((tmp: any) => {\n        console.debug(\">>> 2 success temp-token=\" + tmp[\"token\"]);\n        console.debug(\">>> 3 logging into REST API\");                 // mit Token webserviceServer aufrufen\n        return this.httphandler.get(this.loginURL + tmp[\"token\"])\n          .toPromise().then((jwt: any) => {\n            console.debug(\">>> 4 result jwt-token=\" + jwt[\"jwt\"]);\n            if (jwt) {\n              this.setToken(jwt[\"jwt\"]);                 // in local storage ablegen\n              this.dontcheck = false;\n              return jwt[\"jwt\"];\n            } else {\n              console.error(\"*** Login not successful\");\n              this.dontcheck = false;\n              throw new Error(\"Login error - JWT is null\");\n            }\n          });\n      }) as Promise<string>;\n  }\n\n  /**\n   * get JWT payload\n   *\n   * returns {any}\n   */\n  public getData(): any {\n    const token = this.getToken();\n    let jsonWebToken: any;\n    if (token) {\n      jsonWebToken = this.jwtHelper.decodeToken(token);\n    }\n    return (jsonWebToken ? jsonWebToken.data || {} : {});\n  }\n\n  /**\n   * Expires token in x seconds?\n   *\n   * param {number} seconds\n   * returns {boolean}\n   */\n  public tokenExpiresIn(seconds: number): boolean {\n    const token = this.getToken();\n    if (token) {\n      // const jwtHelper = new JwtHelperService();\n      return this.jwtHelper.isTokenExpired(token, seconds);\n    }\n    return true;\n  }\n\n  /**\n   * get Token from storage\n   *\n   * returns {string}\n   */\n  public getToken(): string {\n    const token = localStorage.getItem(JwtToken);\n    return token ? token : \"\";\n  }\n\n  /**\n   * save token to storage\n   *\n   * param {string} token\n   */\n  public setToken(token: string) {\n    // console.debug(\"save token \");\n    localStorage.setItem(JwtToken, token);\n  }\n\n  /**\n   * delete token\n   */\n  public clearToken(): void {\n    localStorage.removeItem(JwtToken);\n  }\n\n  /*\n    HttpClient kann nicht per DI geholt werden, da das eine zyklische Abhaengigkeit im AppModule ausloest\n    Wenn HttpClient spaeter geholt wird, gibt es keine Probleme. Entspricht nicht der reinen Lehre -> wenn mal Zeit ist\n    -> https://stackoverflow.com/questions/39767019\n   */\n  private getHttp(): HttpClient {\n    return this.injector.get<HttpClient>(HttpClient);\n  }\n\n  // Promise erzeugen, das wartet bis ein Token verfuegbar ist\n  private waitForToken(): Promise<string> {\n    return new Promise<string>((resolve: (token: string) => void) => {\n      this.timeoutfn(resolve, 10);\n    });\n  }\n  // rekursive Warteschleife\n  private timeoutfn(resolve: (token: string) => void, ms: number) {\n    setTimeout(() => {\n      if (this.dontcheck) {\n        this.timeoutfn(resolve, ms);\n      } else {\n        resolve(this.getToken());\n      }\n    }, ms);\n\n  }\n\n}\n","import { HttpErrorResponse, HttpEvent, HttpHandler, HttpInterceptor, HttpRequest } from \"@angular/common/http\";\nimport { Injectable } from \"@angular/core\";\nimport { JwtHeader } from \"@hb42/lib-common\";\nimport { EMPTY, from, Observable, throwError } from \"rxjs\";\nimport { catchError, mergeMap } from \"rxjs/operators\";\nimport { ErrorService } from \"../error.service\";\nimport { LogonService } from \"./logon.service\";\n\n/**\n * {@link HttpInterceptor} fuer das Einfuegen eines JWT in die Aufrufe\n * zum REST-Server. Ausserdem werden HTTP-Fehler an den {@link ErrorService}\n * uebergeben (ausser 401 + 403, da wird die Anwendung neu geladen).\n *\n * Uebernommen aus {@link https://github.com/auth0/angular2-jwt}.\n *\n * @see {@link LOGON_OPTIONS}\n * @see {@link LogonService}\n * @see {@link LogonParameter}\n * @see {@link ErrorService}\n */\n@Injectable()\nexport class LogonInterceptor implements HttpInterceptor {\n\n  private whitelist: string[] = [];\n\n  constructor(private logonService: LogonService, private errorService: ErrorService) {\n    console.debug(\"c'tor LogonInterceptor\");\n    this.whitelist = logonService.urlsWithoutToken;\n  }\n\n  public intercept(request: HttpRequest<any>, next: HttpHandler): Observable<HttpEvent<any>> {\n    // console.debug(\"INTERCEPT (1 check) \" + request.url);\n    if (!this.logonService.active || this.isWhitelisted(request)) {\n      // console.debug(\"no token check \" + request.url);\n      request = request.clone();\n      return this.errorHandling(request, next);\n    } else {\n      const token: Promise<string> = this.logonService.getTokenWithCheck();\n      return from(token).pipe(mergeMap((asyncToken: string) => {\n        // console.debug(\"insert token into request \" + request.url);\n        request = request.clone({setHeaders: {[JwtHeader]: asyncToken}});\n        return this.errorHandling(request, next);\n      }));\n    }\n  }\n\n  private isWhitelisted(request: HttpRequest<any>): boolean {\n    return (this.whitelist.findIndex((addr) => request.url.startsWith(addr)) > -1);\n  }\n\n  private errorHandling(request: HttpRequest<any>, next: HttpHandler): Observable<HttpEvent<any>> {\n    // console.debug(\"INTERCEPT (2 call) \" + request.url);\n    return next.handle(request).pipe(catchError((err: any, obs) => {\n      console.debug(\"LogonInterceptor: errorHandling \" + request.url);\n      console.dir(err);\n      if (err instanceof HttpErrorResponse) {\n        if (err.status === 0 /*&& err.type === 3*/) { // network error (Server weg?)\n          console.debug(\"LogonInterceptor: network error\");\n          this.errorService.newError(\"Network Error\", \"Der Server ist nicht erreichbar.\");\n        } else if (err.status >= 400) {\n          console.debug(\"LogonInterceptor: HTTP-Error \" + err.status);\n          if (err.status === 401 || err.status === 403) {\n            this.errorService.resetApp();\n          } else {\n            this.errorService.newError(err.status + \" - \" + err.statusText,\n                err.message || \"Server liefert ungueltige Daten.\");\n          }\n        }\n        return EMPTY; // Observable.empty();\n      } else {\n        // this.errorService.newError(\"Error\", JSON.stringify(err));\n        console.error(\"LogonInterceptor: unhandled exception - rethrow\");\n        return throwError(err);\n      }\n    }));\n  }\n\n}\n","import { Injectable } from \"@angular/core\";\n\n/**\n * App-Configfile direkt, ohne Angular-Mechanismen. einlesen und\n * via AppConfig.settings.xxx in der Anwendung verfuegbar machen.\n *\n * Damit kann eine lokale Konfig-Datei geladen werden, bevor\n * Angular initialiert wird:\n *\n * <pre>\n *   AppConfig.load(environment.configFile).then(() => {\n *     platformBrowserDynamic().bootstrapModule(AppModule)\n *       .catch((err) => {\n *         console.info(\"Runtime-ERROR \" + err);\n *       })\n *  });\n *  </pre>\n *\n * Falls der Angular-Compiler ngc ueber diese Datei stolpert:\n * in tsconfig.json unter \"angularCompilerOptions\" \"strictMetadataEmit\"\n * auf \"false\" setzen.\n */\n// @dynamic\n@Injectable()\nexport class AppConfig {\n\n  public static settings: any = {};\n\n  public static load(jsonFile: string) {\n    return new Promise((resolve, reject) => {\n      const xhr = new XMLHttpRequest();\n      xhr.overrideMimeType(\"application/json\");\n      xhr.open(\"GET\", jsonFile, true);\n      xhr.onreadystatechange = () => {\n        if (xhr.readyState === 4) {\n          if (xhr.status === 200) {\n            this.settings = JSON.parse(xhr.responseText);\n            resolve();\n          } else {\n            reject(`Could not load file '${jsonFile}': ${xhr.status}`);\n          }\n        }\n      };\n      xhr.send();\n    });\n  }\n}\n","import { CommonModule } from \"@angular/common\";\nimport { HTTP_INTERCEPTORS } from \"@angular/common/http\";\nimport { ErrorHandler, NgModule } from \"@angular/core\";\n\nimport { FlexboxSplitter } from \"./component\";\nimport { FileSizePipe, IEDatePipe } from \"./pipe\";\nimport { ElectronService, ErrorService, VersionService } from \"./service\";\nimport { JwtHelperService, LogonInterceptor, LogonService } from \"./service/logon\";\n\n// Verhindern, dass ErrorService mehrfach instanziiert wird\nexport function initErrorHandler(errorService: ErrorService) {\n  return errorService;\n}\n\n@NgModule({\n            imports     : [CommonModule],\n            exports     : [FlexboxSplitter, FileSizePipe, IEDatePipe],\n            declarations: [FlexboxSplitter, FileSizePipe, IEDatePipe],\n            providers   : [\n              ElectronService,\n              ErrorService,\n              VersionService,\n              LogonService,\n              JwtHelperService,\n              {\n                provide : HTTP_INTERCEPTORS,\n                useClass: LogonInterceptor,\n                multi   : true,\n              },\n              {\n                provide   : ErrorHandler,\n                useFactory: initErrorHandler,\n                deps      : [ErrorService],\n              },\n            ],\n          })\nexport class LibClientModule {\n}\n"],"names":["Directive","ElementRef","Input","Pipe","Injectable","Router","Injector","http","VERSION","semver.prerelease","semver.major","semver.minor","semver.patch","HttpClient","Location","makeSseUrl","InjectionToken","loginURL","JwtToken","Inject","from","mergeMap","JwtHeader","catchError","HttpErrorResponse","EMPTY","throwError","NgModule","CommonModule","HTTP_INTERCEPTORS","ErrorHandler"],"mappings":"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"}
