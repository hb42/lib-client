{"version":3,"file":"module.js","sourceRoot":"","sources":["../../src/module.ts"],"names":[],"mappings":";;;;;;AAAA,OAAO,EAAE,YAAY,EAAE,MAAM,iBAAiB,CAAC;AAC/C,OAAO,EAAE,iBAAiB,EAAE,MAAM,sBAAsB,CAAC;AACzD,OAAO,EAAE,YAAY,EAAE,QAAQ,EAAE,MAAM,eAAe,CAAC;AAEvD,OAAO,EAAE,eAAe,EAAE,MAAM,aAAa,CAAC;AAC9C,OAAO,EAAE,YAAY,EAAE,UAAU,EAAE,MAAM,QAAQ,CAAC;AAClD,OAAO,EAAE,eAAe,EAAE,YAAY,EAAE,cAAc,EAAE,MAAM,WAAW,CAAC;AAC1E,OAAO,EAAE,gBAAgB,EAAE,gBAAgB,EAAE,YAAY,EAAE,MAAM,iBAAiB,CAAC;AAEnF,2DAA2D;AAC3D,MAAM,UAAU,gBAAgB,CAAC,YAA0B;IACzD,OAAO,YAAY,CAAC;AACtB,CAAC;AAwBD,IAAa,eAAe,GAA5B,MAAa,eAAe;CAC3B,CAAA;AADY,eAAe;IAtB3B,QAAQ,CAAC;QACE,OAAO,EAAO,CAAC,YAAY,CAAC;QAC5B,OAAO,EAAO,CAAC,eAAe,EAAE,YAAY,EAAE,UAAU,CAAC;QACzD,YAAY,EAAE,CAAC,eAAe,EAAE,YAAY,EAAE,UAAU,CAAC;QACzD,SAAS,EAAK;YACZ,eAAe;YACf,YAAY;YACZ,cAAc;YACd,YAAY;YACZ,gBAAgB;YAChB;gBACE,OAAO,EAAG,iBAAiB;gBAC3B,QAAQ,EAAE,gBAAgB;gBAC1B,KAAK,EAAK,IAAI;aACf;YACD;gBACE,OAAO,EAAK,YAAY;gBACxB,UAAU,EAAE,gBAAgB;gBAC5B,IAAI,EAAQ,CAAC,YAAY,CAAC;aAC3B;SACF;KACF,CAAC;GACC,eAAe,CAC3B;SADY,eAAe","sourcesContent":["import { CommonModule } from \"@angular/common\";\nimport { HTTP_INTERCEPTORS } from \"@angular/common/http\";\nimport { ErrorHandler, NgModule } from \"@angular/core\";\n\nimport { FlexboxSplitter } from \"./component\";\nimport { FileSizePipe, IEDatePipe } from \"./pipe\";\nimport { ElectronService, ErrorService, VersionService } from \"./service\";\nimport { JwtHelperService, LogonInterceptor, LogonService } from \"./service/logon\";\n\n// Verhindern, dass ErrorService mehrfach instanziiert wird\nexport function initErrorHandler(errorService: ErrorService) {\n  return errorService;\n}\n\n@NgModule({\n            imports     : [CommonModule],\n            exports     : [FlexboxSplitter, FileSizePipe, IEDatePipe],\n            declarations: [FlexboxSplitter, FileSizePipe, IEDatePipe],\n            providers   : [\n              ElectronService,\n              ErrorService,\n              VersionService,\n              LogonService,\n              JwtHelperService,\n              {\n                provide : HTTP_INTERCEPTORS,\n                useClass: LogonInterceptor,\n                multi   : true,\n              },\n              {\n                provide   : ErrorHandler,\n                useFactory: initErrorHandler,\n                deps      : [ErrorService],\n              },\n            ],\n          })\nexport class LibClientModule {\n}\n"]}