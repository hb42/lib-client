{"version":3,"file":"electron.service.js","sourceRoot":"","sources":["../../../src/service/electron.service.ts"],"names":[],"mappings":";;;;;;;;;AAAA,OAAO,EACL,UAAU,GACX,MAAM,eAAe,CAAC;AAEvB;;;;;;;;;;;;;;GAcG;AAEH,IAAa,eAAe,GAA5B,MAAa,eAAe;IAkB1B;QACE;;;;;WAKG;QACH,MAAM,GAAG,GAAQ,MAAM,CAAC;QACxB,IAAI,OAAO,GAAG,CAAC,OAAO,KAAK,UAAU,EAAE;YACrC,MAAM,QAAQ,GAAG,GAAG,CAAC,OAAO,CAAC,UAAU,CAAC,CAAC;YACzC,IAAI,QAAQ,EAAE;gBACZ,IAAI,CAAC,WAAW,GAAG,QAAQ,CAAC,WAAW,CAAC;aACzC;SACF;QACD,IAAI,IAAI,CAAC,UAAU,EAAE;YACnB,OAAO,CAAC,IAAI,CAAC,8BAA8B,CAAC,CAAC;YAC7C,OAAO,CAAC,GAAG,CAAC,OAAO,CAAC,QAAQ,CAAC,CAAC;SAC/B;IACH,CAAC;IAhCD,IAAI,WAAW;QACb,OAAO,IAAI,CAAC,WAAW,CAAC;IAC1B,CAAC;IACD,IAAI,UAAU;QACZ,OAAO,OAAO,IAAI,CAAC,WAAW,KAAK,WAAW,CAAC;IACjD,CAAC;IACD,IAAI,eAAe;QACjB,IAAI,IAAI,CAAC,UAAU,EAAE;YACnB,OAAO,IAAI,CAAC,WAAW,CAAC,QAAQ,CAAC,aAAa,EAAE,EAAE,CAAC,CAAC;SACrD;aAAM;YACL,OAAO,IAAI,CAAC;SACb;IACH,CAAC;CAsBF,CAAA;AAtCY,eAAe;IAD3B,UAAU,EAAE;;GACA,eAAe,CAsC3B;SAtCY,eAAe","sourcesContent":["import {\n  Injectable,\n} from \"@angular/core\";\n\n/**\n * Verbindung zur electron runtime\n *\n *  Verwendung:\n *  <pre>\n *   public testElectron(electronService.ipcRenderer) {\n *     console.info(\"### sync reply \" + ipcRenderer.sendSync(\"synchronous-message\", \"ping\"));\n *\n *     ipcRenderer.on(\"asynchronous-reply\", (event, arg) => {\n *       console.info(\"### async reply \" + arg);\n *     });\n *     ipcRenderer.send(\"asynchronous-message\", \"ping\");\n *   }\n * </pre>\n */\n@Injectable()\nexport class ElectronService {\n\n  private readonly ipcrenderer: any;\n\n  get ipcRenderer() {\n    return this.ipcrenderer;\n  }\n  get isElectron() {\n    return typeof this.ipcrenderer !== \"undefined\";\n  }\n  get electronVersion() {\n    if (this.isElectron) {\n      return this.ipcRenderer.sendSync(\"get-version\", \"\");\n    } else {\n      return null;\n    }\n  }\n\n  constructor() {\n    /*\n     electron mit window.require holen, das wird nicht von webpack ueberschrieben. Dadurch\n     ignoriert webpack electron und packt es nicht in vendor.js. Ausserdem wird so die vorhandene\n     electron-Runtime verwendet. window.require ist nur in einer node/electron-Umgebung vorhanden.\n     -> {@link https://github.com/electron/electron/issues/7300}\n     */\n    const win: any = window;\n    if (typeof win.require === \"function\") {\n      const electron = win.require(\"electron\");\n      if (electron) {\n        this.ipcrenderer = electron.ipcRenderer;\n      }\n    }\n    if (this.isElectron) {\n      console.info(\"Running on electron runtime:\");\n      console.dir(process.versions);\n    }\n  }\n\n}\n"]}